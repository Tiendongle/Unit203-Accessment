import { useState } from 'react';
import Head from 'next/head'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.scss'

import { CartState, CartItemProps } from '@/types';
import { CartItem } from '@/components/CartItem';


const lineItems: CartItemProps[] = [
  {
    id: 1,
    title: "Grey Sofa",
    price: 499.99,
    quantity: 1,
    image:
    "https://www.cozey.ca/_next/image?url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F0277%2F3057%2F5462%2Fproducts%2F2_Single_shot_DARK_GREY_OFF_OFF_SLOPE_17f0f115-11f8-4a78-b412-e9a2fea4748d.png%3Fv%3D1629310667&w=1920&q=75",
    swatchColor: "#959392",
    swatchTitle: "Grey"
  },
  {
    id: 2,
    title: "Blue Sofa",
    price: 994.99,
    quantity: 1,
    image:
    "https://www.cozey.ca/_next/image?url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F0277%2F3057%2F5462%2Fproducts%2F3_Seater_SofaSofa_Ottoman_Off_Arm_Configuration_Two_Arms_Arm_Design_Slope_Chaise_Off_Fabric_Navy_Blue2.png%3Fv%3D1629231450&w=1920&q=75",
    swatchColor: "#191944",
    swatchTitle: "Blue"
  },
  {
    id: 3,
    title: "White Sofa",
    price: 599.99,
    quantity: 1,
    image:
    "https://www.cozey.ca/_next/image?url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F0277%2F3057%2F5462%2Fproducts%2F2_Single_shot_IVORY_OFF_OFF_SLOPE_5379af1f-9318-4e37-b514-962d33d1ce64.png%3Fv%3D1629231450&w=1920&q=75",
    swatchColor: "#F8F1EC",
    swatchTitle: "White"
  },
];

const SUBTOTAL = 2094.97;
const HST = 272.3461;
const TOTAL = 2382.3161;
const SHIPPING = 15;

const TAX_RATE = 0.13;
const ESTIMATED_DELIVERY = "Nov 24, 2021";

// Helper Function to generate a random item
const generateRandomItem = () => Math.floor(Math.random() * lineItems.length);

export default function Home() {
  // Basic State function. Should be converted to use Actions and Reducer given more time.
  const [cartState, setCartState] = useState<CartState>({
    cartItems: lineItems,
    price: {
      subtotal: SUBTOTAL,
      taxes: HST,
      shipping: SHIPPING,
      total: TOTAL,
    }
  });

  const CART_ACTIONS = {
    removeLineItem: (lineItemId: number) => {
      if (!lineItemId) return;

      setCartState((current) => ({
        ...current,
        cartItems: current.cartItems.filter(lineItems => lineItems.id !== lineItemId)
      }))
    },
    addLineItem: (lineItem: number) => {
      if( lineItem > lineItems.length ) return;

      setCartState((current) => ({
        ...current,
        cartItems: [...current.cartItems, lineItems[lineItem]],
      }))
    },
    calculateFees: () => {
      if(!cartState.cartItems.length) return;
      setCartState((current) => {
        const NEW_SUBTOTAL = current.cartItems.reduce((acc, {price}) => acc + price, current?.cartItems[0]?.price || 0);
        const TAX_TOTAL = NEW_SUBTOTAL * TAX_RATE;
        const NEW_SHIPPING = NEW_SUBTOTAL ? SHIPPING : 0
        return {
          ...current,
          price: {
            subtotal: NEW_SUBTOTAL,
            taxes: TAX_TOTAL,
            shipping: NEW_SHIPPING,
            total: NEW_SUBTOTAL + NEW_SHIPPING + TAX_TOTAL,
          }
        }
      })
    }
  };
  
  return (
    <>
      <Head>
        <title>Unit 203</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1>Your Cart</h1>
        <div className={styles.cart}>
          {
            cartState.cartItems.map(( cartItem, key ) => <CartItem key={key} {...cartItem} removeItemFunction={(id) => {
              CART_ACTIONS.removeLineItem(id)
              CART_ACTIONS.calculateFees()
            }} />)
          }
        </div>
        <div className={styles.pricingData}>
          <ul>
            <li><p>Subtotal</p><p>${cartState.price.subtotal.toFixed(2)}</p></li>
            <li><p>Taxes (estimated)</p><p>${cartState.price.taxes.toFixed(2)}</p></li>
            <li><p>Shipping</p><p>${cartState.price.shipping.toFixed(2)}</p></li>
            <li className={styles.pricingData_totals}><p>Total</p><p>{cartState.price.total.toFixed(2)}</p></li>
          </ul>
        </div>
        <button
          onClick={()=> {
            CART_ACTIONS.addLineItem(generateRandomItem());
            CART_ACTIONS.calculateFees()
          }}
        >
          Add
        </button>
      </main>
    </>
  )
}
